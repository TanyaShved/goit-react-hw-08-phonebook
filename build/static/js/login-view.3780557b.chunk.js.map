{"version":3,"sources":["views/LoginView.jsx"],"names":["useStyles","makeStyles","root","width","display","flexDirection","marginBottom","divStyles","flexFlow","alignItems","paddingBottom","LoginView","dispatch","useDispatch","useState","email","setEmail","password","setPassword","classes","handleChange","target","name","value","style","color","onSubmit","e","preventDefault","authOperations","loginUser","alert","className","noValidate","autoComplete","id","label","onChange","variant","type"],"mappings":"iRAOMA,EAAYC,aAAW,iBAAO,CAClCC,KAAM,CACJ,uBAAwB,CACrBC,MAAO,OACPC,QAAS,OACTC,cAAe,SACfC,aAAc,SAKfC,EAAY,CAChBH,QAAS,OACTI,SAAU,SACVC,WAAY,SACZH,aAAc,GACdI,cAAe,IAGF,SAASC,IACtB,IAAMC,EAAWC,cADiB,EAERC,mBAAS,IAFD,mBAE3BC,EAF2B,KAEpBC,EAFoB,OAGAF,mBAAS,IAHT,mBAGzBG,EAHyB,KAGfC,EAHe,KAI1BC,EAAUnB,IAEZoB,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAON,EAASO,GAClB,IAAK,WACH,OAAOL,EAAYK,GACrB,QACE,SAeN,OACE,sBAAKC,MAAOjB,EAAZ,UACE,oBAAIiB,MAAO,CAACC,MAAO,OAAnB,4BAEI,uBAAMC,SAfS,SAAAC,GAMjB,GALAA,EAAEC,iBACFhB,EAASiB,IAAeC,UAAU,CAAEf,QAAOE,cAC3CD,EAAS,IACTE,EAAY,IAEE,KAAVH,GAA6B,KAAbE,EAChB,OAAOc,MAAM,wCAQeC,UAAWb,EAAQjB,KAAM+B,YAAU,EAACC,aAAa,MAA/E,UACI,gCACN,cAAC,IAAD,CACEC,GAAG,QACHC,MAAM,QACNb,MAAOR,EACPO,KAAK,QACLe,SAAUjB,EACVkB,QAAQ,WACRb,MAAM,cAER,cAAC,IAAD,CACEU,GAAG,WACHC,MAAM,WACNE,QAAQ,WACRhB,KAAK,WACLC,MAAON,EACPoB,SAAUjB,EACVK,MAAM,iBAIhB,cAAC,IAAD,CAAQc,KAAK,SAASD,QAAQ,YAAYb,MAAM,YAAhD","file":"static/js/login-view.3780557b.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    '& .MuiTextField-root': {\n       width: '25ch',\n       display: 'flex',\n       flexDirection: 'column',\n       marginBottom: 15,\n    },\n  },\n}));\n\nconst divStyles = {\n  display: 'flex',\n  flexFlow: 'column',\n  alignItems: 'center',\n  marginBottom: 20,\n  paddingBottom: 20,\n};\n\nexport default function LoginView() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const classes = useStyles();\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        dispatch(authOperations.loginUser({ email, password }));\n        setEmail('');\n        setPassword('');\n      \n        if (email === '' || password === '') {\n            return alert('Please fill in the required fields!');\n        };\n    }\n\n  return (\n    <div style={divStyles}>\n      <h1 style={{color: 'red'}}>Sign in please</h1>\n\n          <form onSubmit={handleSubmit} className={classes.root} noValidate autoComplete=\"off\" >\n              <div>\n        <TextField\n          id=\"email\"\n          label=\"Email\"\n          value={email}\n          name=\"email\"\n          onChange={handleChange}\n          variant=\"outlined\"\n          color=\"secondary\"\n        /> \n        <TextField\n          id=\"password\"\n          label=\"Password\"\n          variant=\"outlined\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n          color=\"secondary\"\n                  />\n              </div>\n\n<Button type=\"submit\" variant=\"contained\" color=\"secondary\">Sign in</Button>\n      </form>\n    </div>\n  );\n}"],"sourceRoot":""}